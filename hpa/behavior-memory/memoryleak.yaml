kind: Deployment
apiVersion: apps/v1
metadata:
  name: memoryleak
  labels:
    app: memoryleak
spec:
  # replicas: N # Deligate replicas decision to hpa.
  selector:
    matchLabels:
      app: memoryleak
  template:
    metadata:
      name: memoryleak
      labels:
        app: memoryleak
    spec:
      containers:
        - name: memoryleak
          image: guitarrapc/csharp-lab:75f30b2-memoryleak-memoryleakapi
          ports:
            - name: http
              containerPort: 80
          resources:
            requests:
              cpu: 200m
              memory: 128Mi
            limits:
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: memoryleak
spec:
  type: ClusterIP
  clusterIP: None # headless for balancing http/2 requests
  selector:
    app: memoryleak
  ports:
    - name: http
      port: 80
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
  labels:
    app: envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      labels:
        app: envoy
    spec:
      containers:
        - name: envoy
          image: envoyproxy/envoy:v1.26-latest
          command: ["envoy", "-c", "/var/opt/envoy/envoy.yaml"]
          resources:
            requests:
              cpu: 300m
              memory: 256Mi
            limits:
              cpu: 300m
              memory: 256Mi
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - name: envoy-config
              mountPath: /var/opt/envoy
      volumes:
        - name: envoy-config
          configMap:
            name: envoy-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  envoy.yaml: |
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          protocol: TCP
          port_value: 9901

    static_resources:
      listeners:
        - name: listener
          address:
            socket_address:
              address: 0.0.0.0
              protocol: TCP
              port_value: 80
          filter_chains:
            filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stat_prefix: ingress_http
                  access_log:
                    - name: envoy.file_access_log
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                        path: "/dev/stdout"
                  route_config:
                    name: local_route
                    virtual_hosts:
                      - name: http
                        domains: ["*"]
                        routes:
                          - match:
                              prefix: /
                            route:
                              cluster: http_cluster
                  http_filters:
                    - name: envoy.filters.http.router
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: http_cluster
          connect_timeout: 1s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          circuit_breakers:
            thresholds:
              max_connections: 8192
              max_pending_requests: 8192
              max_requests: 8192
          ignore_health_on_host_removal: true
          load_assignment:
            cluster_name: http_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: memoryleak
                          port_value: 80
---
apiVersion: v1
kind: Service
metadata:
  name: envoy
spec:
  type: ClusterIP
  selector:
    app: envoy
  ports:
    - name: http
      port: 80
      targetPort: http
